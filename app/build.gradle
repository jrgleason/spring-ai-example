/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'idea'
    id "com.github.node-gradle.node" version "7.1.0"
}
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

node {
    download = false
    nodeProjectDir = file("${project.projectDir}/../ui")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = 'https://repo.spring.io/milestone'
    }
}

group = 'jrg.example'
version = '0.0.2-SNAPSHOT'

ext {
    set('springAiVersion', "1.0.0-M6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.integration:spring-integration-mqtt:6.3.4'

    implementation "org.springframework.ai:spring-ai-openai-spring-boot-starter"
    implementation "org.springframework.ai:spring-ai-anthropic-spring-boot-starter"
    implementation "org.springframework.ai:spring-ai-pinecone-store-spring-boot-starter"
    implementation 'org.springframework.ai:spring-ai-redis-store-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.5'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.2'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}


// Create a custom task for 'npm run build'
tasks.register('npmBuild', NpmTask) {
    // Properly reference the npmInstall task
    dependsOn(tasks.named('npmInstall'))

    // Set the arguments using the proper method
    setArgs(['run', 'build'])
}

bootRun {
    dependsOn npmBuild
}
build {
    dependsOn npmBuild
}